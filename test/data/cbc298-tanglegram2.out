@01 instances/miplib2010/tanglegram2.mps.gz ===========
-----------------------------
Tue Jun 14 12:05:00 MST 2016
-----------------------------
@03 1465931100
Welcome to the CBC MILP Solver
Version: 2.9.8
Build Date: Jun 10 2016

command line - /home/beck/math/opt/miplib/miplib2010-1.1.0/bin/cbc -import instances/miplib2010/tanglegram2.mps.gz -sec 7200 -threads 1 -ratio 0.0 -timeMode elapsed -solve -solution /home/beck/math/opt/miplib/miplib2010-1.1.0/results/solutions/benchmark.cbc.tanglegram2.mps.sol (default strategy 1)
At line 1 NAME           tanglegram2
At line 2 ROWS
At line 8984 COLUMNS
At line 40417 RHS
At line 44738 BOUNDS
At line 49453 ENDATA
Problem tanglegram2 has 8980 rows, 4714 columns and 26940 elements
Coin0008I tanglegram2 read with 0 errors
seconds was changed from 1e+100 to 7200
threads was changed from 0 to 1
ratioGap was changed from 0 to 0
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.46 seconds
Cgl0004I processed model has 8980 rows, 4714 columns (4714 integer (4714 of which binary)) and 26940 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 148 integers unsatisfied sum - 74
Cbc0038I Pass   1: (0.55 seconds) suminf.   72.00000 (144) obj. 13 iterations 117
Cbc0038I Pass   2: (0.56 seconds) suminf.   61.50000 (123) obj. 23.5 iterations 43
Cbc0038I Pass   3: (0.57 seconds) suminf.   59.00000 (118) obj. 26 iterations 21
Cbc0038I Pass   4: (0.58 seconds) suminf.   59.00000 (118) obj. 26 iterations 18
Cbc0038I Pass   5: (0.59 seconds) suminf.   59.00000 (118) obj. 26 iterations 39
Cbc0038I Pass   6: (0.61 seconds) suminf.   59.00000 (118) obj. 168 iterations 255
Cbc0038I Pass   7: (0.62 seconds) suminf.   59.00000 (118) obj. 168 iterations 112
Cbc0038I Pass   8: (0.63 seconds) suminf.   59.00000 (118) obj. 168 iterations 22
Cbc0038I Pass   9: (0.65 seconds) suminf.   61.00000 (122) obj. 282 iterations 236
Cbc0038I Pass  10: (0.66 seconds) suminf.   61.00000 (122) obj. 282 iterations 95
Cbc0038I Pass  11: (0.67 seconds) suminf.   58.00000 (116) obj. 285 iterations 37
Cbc0038I Pass  12: (0.68 seconds) suminf.   58.00000 (116) obj. 285 iterations 29
Cbc0038I Pass  13: (0.69 seconds) suminf.   58.00000 (116) obj. 285 iterations 19
Cbc0038I Pass  14: (0.70 seconds) suminf.   58.50000 (117) obj. 391.5 iterations 257
Cbc0038I Pass  15: (0.72 seconds) suminf.   58.50000 (117) obj. 391.5 iterations 115
Cbc0038I Pass  16: (0.73 seconds) suminf.   57.00000 (114) obj. 393 iterations 44
Cbc0038I Pass  17: (0.74 seconds) suminf.   57.00000 (114) obj. 393 iterations 36
Cbc0038I Pass  18: (0.75 seconds) suminf.   57.00000 (114) obj. 393 iterations 40
Cbc0038I Pass  19: (0.77 seconds) suminf.   56.50000 (113) obj. 499 iterations 247
Cbc0038I Pass  20: (0.78 seconds) suminf.   56.50000 (113) obj. 499 iterations 115
Cbc0038I Pass  21: (0.79 seconds) suminf.   56.50000 (113) obj. 499 iterations 17
Cbc0038I Pass  22: (0.81 seconds) suminf.   57.00000 (114) obj. 593.5 iterations 238
Cbc0038I Pass  23: (0.82 seconds) suminf.   57.00000 (114) obj. 593.5 iterations 111
Cbc0038I Pass  24: (0.83 seconds) suminf.   56.50000 (113) obj. 594 iterations 21
Cbc0038I Pass  25: (0.84 seconds) suminf.   56.50000 (113) obj. 594 iterations 20
Cbc0038I Pass  26: (0.86 seconds) suminf.   56.50000 (113) obj. 594 iterations 38
Cbc0038I Pass  27: (0.87 seconds) suminf.   57.50000 (115) obj. 687 iterations 228
Cbc0038I Pass  28: (0.88 seconds) suminf.   57.50000 (115) obj. 687 iterations 109
Cbc0038I Pass  29: (0.89 seconds) suminf.   56.50000 (113) obj. 688 iterations 14
Cbc0038I Pass  30: (0.90 seconds) suminf.   56.50000 (113) obj. 688 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3813 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.93 seconds)
Cbc0038I After 0.93 seconds - Feasibility pump exiting - took 0.40 seconds
Cbc0031I 39 added rows had average density of 12.589744
Cbc0013I At root node, 39 cuts changed objective from 0 to 30 in 38 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 5487 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 821 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 30 (2.99 seconds)
Cbc0012I Integer solution of 476 found by rounding after 4996 iterations and 8 nodes (8.00 seconds)
Cbc0012I Integer solution of 476 found by heuristic after 4029 iterations and 7 nodes (8.00 seconds)
Cbc0010I After 100 nodes, 36 on tree, 476 best solution, best possible 30 (28.63 seconds)
Cbc0010I After 200 nodes, 65 on tree, 476 best solution, best possible 30 (41.39 seconds)
Cbc0010I After 300 nodes, 61 on tree, 476 best solution, best possible 30 (63.99 seconds)
Cbc0010I After 400 nodes, 38 on tree, 476 best solution, best possible 30 (83.18 seconds)
Cbc0012I Integer solution of 475 found by heuristic after 264587 iterations and 488 nodes (98.81 seconds)
Cbc0012I Integer solution of 443 found by heuristic after 267932 iterations and 493 nodes (100.49 seconds)
Cbc0010I After 500 nodes, 2 on tree, 443 best solution, best possible 30 (102.78 seconds)
Cbc0030I Thread 0 used 504 times,  waiting to start 0.1301527, 101.03032 cpu time, 3066 locks, 0.087167978 locked, 0.00040507317 waiting for locks
Cbc0030I Main thread 100.66752 waiting for threads,  1019 locks, 0.00043535233 locked, 6.0796738e-05 waiting for locks
Cbc0001I Search completed - best objective 443, took 278419 iterations and 504 nodes (103.79 seconds)
Cbc0032I Strong branching done 3732 times (157765 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 43, 550 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 30
Probing was tried 76 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.191 seconds)
Gomory was tried 642 times and created 75863 cuts of which 0 were active after adding rounds of cuts (6.921 seconds)
Knapsack was tried 76 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.266 seconds)
Clique was tried 76 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
MixedIntegerRounding2 was tried 76 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.189 seconds)
FlowCover was tried 76 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 642 times and created 3400 cuts of which 0 were active after adding rounds of cuts (3.020 seconds)

Result - Optimal solution found

Objective value:                443.00000000
Enumerated nodes:               504
Total iterations:               278419
Time (CPU seconds):             104.19
Time (Wallclock seconds):       103.87

Total time (CPU seconds):       104.22   (Wallclock seconds):       103.91

=obj= 443.00000000
occ(223) 1
occ(224) 1
occ(225) 1
occ(226) 1
occ(227) 1
occ(228) 1
occ(229) 1
occ(230) 1
occ(231) 1
occ(232) 1
occ(233) 1
occ(234) 1
occ(235) 1
occ(236) 1
occ(237) 1
occ(238) 1
occ(239) 1
occ(240) 1
occ(241) 1
occ(242) 1
occ(243) 1
occ(244) 1
occ(304) 1
occ(305) 1
occ(306) 1
occ(307) 1
occ(308) 1
occ(309) 1
occ(310) 1
occ(311) 1
occ(312) 1
occ(317) 1
occ(318) 1
occ(319) 1
occ(320) 1
occ(321) 1
occ(322) 1
occ(323) 1
occ(324) 1
occ(325) 1
occ(326) 1
occ(327) 1
occ(328) 1
occ(329) 1
occ(330) 1
occ(360) 1
occ(361) 1
occ(362) 1
occ(363) 1
occ(364) 1
occ(465) 1
occ(466) 1
occ(489) 1
occ(490) 1
occ(491) 1
occ(492) 1
occ(493) 1
occ(503) 1
occ(504) 1
occ(505) 1
occ(506) 1
occ(507) 1
occ(510) 1
occ(511) 1
occ(515) 1
occ(516) 1
occ(517) 1
occ(1092) 1
occ(1093) 1
occ(1094) 1
occ(1095) 1
occ(1096) 1
occ(1097) 1
occ(1098) 1
occ(1099) 1
occ(1100) 1
occ(1101) 1
occ(1102) 1
occ(1103) 1
occ(1104) 1
occ(1105) 1
occ(1106) 1
occ(1107) 1
occ(1108) 1
occ(1109) 1
occ(1110) 1
occ(1111) 1
occ(1112) 1
occ(1113) 1
occ(1114) 1
occ(1115) 1
occ(1116) 1
occ(1117) 1
occ(1118) 1
occ(1119) 1
occ(1120) 1
occ(1121) 1
occ(1122) 1
occ(1160) 1
occ(1161) 1
occ(1162) 1
occ(1163) 1
occ(1164) 1
occ(1165) 1
occ(1166) 1
occ(1167) 1
occ(1168) 1
occ(1169) 1
occ(1170) 1
occ(1171) 1
occ(1172) 1
occ(1173) 1
occ(1174) 1
occ(1175) 1
occ(1176) 1
occ(1177) 1
occ(1178) 1
occ(1179) 1
occ(1180) 1
occ(1181) 1
occ(1182) 1
occ(1183) 1
occ(1184) 1
occ(1185) 1
occ(1186) 1
occ(1187) 1
occ(1188) 1
occ(1189) 1
occ(1190) 1
occ(1191) 1
occ(1192) 1
occ(1193) 1
occ(1194) 1
occ(1195) 1
occ(1196) 1
occ(1197) 1
occ(1198) 1
occ(1199) 1
occ(1200) 1
occ(1201) 1
occ(1202) 1
occ(1203) 1
occ(1204) 1
occ(1205) 1
occ(1206) 1
occ(1207) 1
occ(1208) 1
occ(1209) 1
occ(1210) 1
occ(1211) 1
occ(1212) 1
occ(1213) 1
occ(1214) 1
occ(1215) 1
occ(1216) 1
occ(1217) 1
occ(1218) 1
occ(1219) 1
occ(1220) 1
occ(1221) 1
occ(1222) 1
occ(1223) 1
occ(1327) 1
occ(1328) 1
occ(1329) 1
occ(1348) 1
occ(1349) 1
occ(1350) 1
occ(1351) 1
occ(1352) 1
occ(1353) 1
occ(1354) 1
occ(1355) 1
occ(1356) 1
occ(1357) 1
occ(1358) 1
occ(1359) 1
occ(1360) 1
occ(1361) 1
occ(1362) 1
occ(1363) 1
occ(1364) 1
occ(1365) 1
occ(1366) 1
occ(1367) 1
occ(1368) 1
occ(1369) 1
occ(1370) 1
occ(1371) 1
occ(1372) 1
occ(1373) 1
occ(1374) 1
occ(1375) 1
occ(1376) 1
occ(1377) 1
occ(1378) 1
occ(1389) 1
occ(1390) 1
occ(1391) 1
occ(1392) 1
occ(1393) 1
occ(1394) 1
occ(1395) 1
occ(1396) 1
occ(1397) 1
occ(1402) 1
occ(1403) 1
occ(1416) 1
occ(1417) 1
occ(2097) 1
occ(2098) 1
occ(2099) 1
occ(2100) 1
occ(2101) 1
occ(2109) 1
occ(2331) 1
occ(2332) 1
occ(2333) 1
occ(2334) 1
occ(2530) 1
occ(2531) 1
occ(2532) 1
occ(2533) 1
occ(2534) 1
occ(2535) 1
occ(2536) 1
occ(2537) 1
occ(2538) 1
occ(2539) 1
occ(2540) 1
occ(2541) 1
occ(2650) 1
occ(2651) 1
occ(2652) 1
occ(2653) 1
occ(2654) 1
occ(2655) 1
occ(2656) 1
occ(2657) 1
occ(2658) 1
occ(2659) 1
occ(2660) 1
occ(2661) 1
occ(2662) 1
occ(2663) 1
occ(2664) 1
occ(2665) 1
occ(2666) 1
occ(2667) 1
occ(2668) 1
occ(2669) 1
occ(2670) 1
occ(2671) 1
occ(2672) 1
occ(2673) 1
occ(2674) 1
occ(2675) 1
occ(2676) 1
occ(2677) 1
occ(2678) 1
occ(2679) 1
occ(2680) 1
occ(2681) 1
occ(2682) 1
occ(2683) 1
occ(2684) 1
occ(2685) 1
occ(2686) 1
occ(2687) 1
occ(2688) 1
occ(2689) 1
occ(2690) 1
occ(2691) 1
occ(2692) 1
occ(2693) 1
occ(2694) 1
occ(2695) 1
occ(2696) 1
occ(2697) 1
occ(2698) 1
occ(2699) 1
occ(2700) 1
occ(2701) 1
occ(2714) 1
occ(2715) 1
occ(2716) 1
occ(2717) 1
occ(2718) 1
occ(2719) 1
occ(2720) 1
occ(2721) 1
occ(2722) 1
occ(2723) 1
occ(2724) 1
occ(2725) 1
occ(2726) 1
occ(2727) 1
occ(2728) 1
occ(2908) 1
occ(2909) 1
occ(2910) 1
occ(2911) 1
occ(2912) 1
occ(2913) 1
occ(2914) 1
occ(2915) 1
occ(2916) 1
occ(2917) 1
occ(2918) 1
occ(2919) 1
occ(2920) 1
occ(2921) 1
occ(3005) 1
occ(3025) 1
occ(3546) 1
occ(3637) 1
occ(3638) 1
occ(3639) 1
occ(3640) 1
occ(3641) 1
occ(3642) 1
occ(3784) 1
occ(3785) 1
occ(3786) 1
occ(3787) 1
occ(3788) 1
occ(3789) 1
occ(3817) 1
occ(3818) 1
occ(3874) 1
occ(3884) 1
occ(3887) 1
occ(3888) 1
occ(3889) 1
occ(3890) 1
occ(3891) 1
occ(3892) 1
occ(3893) 1
occ(3894) 1
occ(3895) 1
occ(3896) 1
occ(3897) 1
occ(3898) 1
occ(3899) 1
occ(3900) 1
occ(3901) 1
occ(3902) 1
occ(3903) 1
occ(3904) 1
occ(3905) 1
occ(3906) 1
occ(3907) 1
occ(3908) 1
occ(3909) 1
occ(3910) 1
occ(3911) 1
occ(3912) 1
occ(3913) 1
occ(3914) 1
occ(3915) 1
occ(3916) 1
occ(3917) 1
occ(4063) 1
occ(4073) 1
occ(4074) 1
occ(4087) 1
occ(4088) 1
occ(4089) 1
occ(4090) 1
occ(4091) 1
occ(4092) 1
occ(4093) 1
occ(4094) 1
occ(4095) 1
occ(4108) 1
occ(4109) 1
occ(4110) 1
occ(4159) 1
occ(4160) 1
occ(4161) 1
occ(4162) 1
occ(4163) 1
occ(4164) 1
occ(4165) 1
occ(4166) 1
occ(4167) 1
occ(4168) 1
occ(4169) 1
occ(4189) 1
occ(4190) 1
occ(4191) 1
occ(4192) 1
occ(4194) 1
occ(4240) 1
occ(4241) 1
occ(4242) 1
occ(4243) 1
occ(4265) 1
occ(4266) 1
occ(4267) 1
occ(4268) 1
occ(4269) 1
occ(4270) 1
occ(4271) 1
occ(4272) 1
occ(4273) 1
occ(4274) 1
occ(4275) 1
occ(4276) 1
occ(4277) 1
occ(4278) 1
occ(4279) 1
occ(4280) 1
occ(4281) 1
occ(4282) 1
occ(4283) 1
occ(4284) 1
occ(4285) 1
occ(4286) 1
occ(4287) 1
occ(4288) 1
occ(4289) 1
occ(4334) 1
occ(4335) 1
occ(4336) 1
occ(4337) 1
occ(4338) 1
occ(4339) 1
occ(4340) 1
occ(4341) 1
occ(4345) 1
occ(4360) 1
occ(4361) 1
occ(4362) 1
occ(4446) 1
occ(4447) 1
occ(4448) 1
occ(4449) 1
occ(4450) 1
occ(4453) 1
occ(4468) 1
occ(4469) 1
occ(4470) 1
p(6) 1
p(8) 1
p(10) 1
p(11) 1
p(12) 1
p(18) 1
p(21) 1
p(23) 1
p(24) 1
p(25) 1
p(26) 1
p(27) 1
p(29) 1
p(31) 1
p(32) 1
p(34) 1
p(35) 1
p(37) 1
p(38) 1
p(39) 1
p(40) 1
p(41) 1
p(42) 1
p(44) 1
p(45) 1
p(46) 1
p(47) 1
p(48) 1
p(49) 1
p(50) 1
p(51) 1
p(52) 1
p(53) 1
p(54) 1
p(55) 1
p(56) 1
p(58) 1
p(59) 1
p(60) 1
p(61) 1
p(62) 1
p(64) 1
p(65) 1
p(67) 1
p(68) 1
p(69) 1
p(84) 1
p(86) 1
p(87) 1
p(93) 1
p(94) 1
p(95) 1
p(96) 1
p(99) 1
p(118) 1
p(119) 1
p(125) 1
p(131) 1
p(134) 1
p(148) 1
p(152) 1
p(154) 1
p(158) 1
p(162) 1
p(165) 1
p(169) 1
p(177) 1
p(179) 1
p(182) 1
p(183) 1
p(192) 1
p(201) 1
p(203) 1
p(208) 1
p(209) 1
p(210) 1
p(211) 1

@04 1465931204
@05 7200

Read MPS: 1
MIP has 4714 vars and 8980 constraints
Read SOL: 1
Objective value computed by solver: 443

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Tue Jun 14 12:06:45 MST 2016
-----------------------------

=ready=
